[{"path":"https://nicksunderland.github.io/HFePHENO/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 HFePHENO authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nicksunderland.github.io/HFePHENO/articles/HFePHENO.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"HFePHENO","text":"","code":"library(ConceptLibraryClient) library(dplyr)"},{"path":"https://nicksunderland.github.io/HFePHENO/articles/HFePHENO.html","id":"phenotypes","dir":"Articles","previous_headings":"","what":"Phenotypes","title":"HFePHENO","text":"can use HDR-UK Phenotypes library search curated Electronic Health Record code lists curated represent ‘Heart Failure’ phenotype. Using online search find nine existing phenotype libraries ids: c(\"PH25\",\"PH531\",\"PH182\",\"PH1028\",\"PH968\",\"PH993\",\"PH631\",\"PH687\",\"PH530\").","code":""},{"path":"https://nicksunderland.github.io/HFePHENO/articles/HFePHENO.html","id":"connect-to-the-api","dir":"Articles","previous_headings":"","what":"Connect to the API","title":"HFePHENO","text":"","code":"# Connect to HDR-UK Phenotypes API client = connect_to_API(public=TRUE)  # Get ids and versions of phenotype previously defined (via online search for 'Heart Failure') ids_version = data.frame(\"id\"     = c(\"PH25\", \"PH531\", \"PH182\", \"PH1028\", \"PH968\", \"PH993\", \"PH631\", \"PH687\", \"PH530\"),                          \"version\"= c(\"50\", \"1062\", \"364\", \"2265\", \"2146\", \"2171\", \"1262\", \"1374\", \"1060\"))  # Recursively extract the phenotype details from the 9 studies details <- purrr::map2_df(.x = ids_version$id,                            .y = ids_version$version,                            .f = ~get_phenotype_detail_by_version(.x, .y, api_client=client)) |>   dplyr::select(phenotype_id, phenotype_name, type)  # View the study details kableExtra::kable(details) # Recursively extract the codes and details  codes <- purrr::map_df(.x = ids_version$id,                         .f = function(x){                         code_list <- get_phenotype_code_list(x, api_client=client)                         extract   <- data.frame(\"code\"           = code_list$code,                                                 \"coding_system\"  = code_list$coding_system,                                                 \"phenotype_name\" = code_list$phenotype_name,                                                 \"concept_name\"   = code_list$concept_name,                                                 \"description\"    = code_list$description)                         return(extract)})  # Make coding system a factor and arrange so that SNOMED codes first codes <- codes |>    dplyr::mutate(coding_system = factor(coding_system, levels = c(\"SNOMED  CT codes\",                                                                  \"Read codes v2\",                                                                  \"OXMIS codes\",                                                                  \"Med codes\",                                                                  \"ICD10 codes\",                                                                      \"ICD9 codes\"))) |>   dplyr::arrange(coding_system) |>   dplyr::distinct(code, .keep_all=TRUE)    # View the study details kableExtra::kable(codes)"},{"path":"https://nicksunderland.github.io/HFePHENO/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicholas Sunderland. Author, maintainer.","code":""},{"path":"https://nicksunderland.github.io/HFePHENO/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sunderland N (2022). HFePHENO: Defining Electronic Health Record Phenotypes Heart Failure. R package version 0.0.0.9000, https://nicksunderland.github.io/HFePHENO/.","code":"@Manual{,   title = {HFePHENO: Defining Electronic Health Record Phenotypes for Heart Failure},   author = {Nicholas Sunderland},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://nicksunderland.github.io/HFePHENO/}, }"},{"path":"https://nicksunderland.github.io/HFePHENO/index.html","id":"hfepheno","dir":"","previous_headings":"","what":"Defining Electronic Health Record Phenotypes for Heart Failure","title":"Defining Electronic Health Record Phenotypes for Heart Failure","text":"goal HFePHENO collate Electronic Health Records (EHR) phenotyping data heart failure.","code":""},{"path":"https://nicksunderland.github.io/HFePHENO/index.html","id":"documentation--examples","dir":"","previous_headings":"","what":"Documentation & Examples","title":"Defining Electronic Health Record Phenotypes for Heart Failure","text":"Can found :","code":""}]
